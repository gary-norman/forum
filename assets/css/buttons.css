:root {
    --btn-radius: 2.4rem;
}
button, .button {
    cursor: pointer;
    & span, & img {
        z-index: 11;
        pointer-events: none;
    }
}
.btn-sm {
    display: flex;
    border-radius : var(--btn-radius);
    padding       : 0.4rem 0.8rem;
    font-size  : 1.2rem;
    height: 3.2rem;
    gap: 0.4rem;
    & span {
        &::before {
            background-size: .8rem !important;
        }
        height: 1.6rem;
    }
}
.btn-sm.btn-icotext {
    & span {
        padding: 0 0 0 2rem;
    }
}

.btn-md {
    display: flex;
    border-radius : var(--btn-radius);
    padding       : 0.8rem 1.6rem;
    font-size  : 1.2rem;
    height: 3.6rem;
    gap: 0.8rem;
    
    
    
    
    
    
    & span {
        &::before {
            background-size: 1.6rem !important;
        }
        height: 2.4rem;
    }
    & span.btn-edit {
        width: 1.6rem;
        height: 1.6rem;
        padding: 0;
    }
}
.btn-md.btn-icotext {
    & span {
        padding: 0 0 0 2rem;
    }
}
.btn-lg {
    display: flex;
    border-radius : var(--btn-radius);
    padding       : 1.2rem 2.4rem 1.2rem 2rem;
    font-size  : 1.6rem;
    gap: 1.2rem;
    height: 4rem;
    & span {
        &::before {
            background-size: 2.4rem !important;
        }
        height: 3.2rem;
    }
}
.btn-lg.btn-icotext {
    & span {
        padding: 0 0 0 2.4rem;
    }
}
.btn-primary {
    background : var(--color-hl-primary);
    /* border     : 0.15rem solid transparent; */
    color      : var(--color-light-1);
    transition: all var(--transition-dur-hover);
    
    
    & span {
        color: var(--color-dark-1);
        /*&::before {*/
        /* filter: var(--filter-invert-always_on) !important; */
        /*    !*background: rgb(255 255 255 / .3);*!*/
        /*    !*filter: invert(1);*!*/
        /*}*/
        transition: all var(--transition-dur-hover) ease-in-out;
    }
    &:hover {
        & span {
            /*filter: invert(0);*/
            /*&::before {*/
            /*    filter: var(--filter-invert-always_off) !important;*/
            /*}*/
        }
    }
}
.btn-follows {
    & span {
        &::before {
            padding: .6rem 1rem .6rem 0;
        }
    }
}

.btn-secondary {
    /* background : transparent; */
    /* border     : 0.15rem solid var(--color-secondary-border); */
    color: var(--color-fg-1);
}

.btn-icotext {
    position: relative;
    display         : flex;
    align-items     : center;
    justify-content : center;
    width: max-content;
    & span {
        align-content: center;
        text-align: right;
        width: fit-content;
        z-index: 10000;
        &::before {
            filter: var(--filter-invert-on_off);
            background-position: left !important;
            content: '';
            position: absolute;
            top: 0;
            left: 1.2rem;
            width: 100%;
            height: 100%;
        }
    }
}
/* --- button icon span classes --- */
/*TODO embed svg's*/
/*url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' style='pointer-events:none;display:block;width:100%25;height:100%25;fill:%23757575'%3E%3Cpath d='M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61.0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z'/%3E%3C/svg%3E") no-repeat 4px center/20px 20px;*/
.btn-following {
    &::before {
        background : url('/assets/icons/following_24.svg') no-repeat center;
    }
}
.btn-followers {
    &::before {
        background : url('/assets/icons/followers_24.svg') no-repeat center;
    }
}
.btn-follow {
    &::before {
        background : url('/assets/icons/arrow-right-white_24.svg') no-repeat center;
    }
}
.btn-posts {
    &::before {
        background : url('/assets/icons/post_16.svg') no-repeat center;
    }
}
.btn-notifications {
    &::before {
        background : url('/assets/icons/notification_16.svg') no-repeat center;
    }
}
.btn-filters {
    &::before {
        background : url('/assets/icons/filters_16.svg') no-repeat center;
    }
}
.btn-sort {
    &::before {
        background : url('/assets/icons/sort_16.svg') no-repeat center;
    }
}
.btn-likes {
    &::before {
        background : url('/assets/icons/likes_16.svg') no-repeat center;
    }
}
.btn-dislikes {
    &::before {
        background : url('/assets/icons/dislikes_16.svg') no-repeat center;
    }
}
.btn-share {
    &::before {
        background : url('/assets/icons/share_16.svg') no-repeat center;
    }
}
.btn-heart-full {
    &::before {
        background : url('/assets/icons/heart-full_24.svg') no-repeat center;
    }
}
.btn-heart-empty {
    &::before {
        background : url('/assets/icons/heart-empty_24.svg') no-repeat center;
    }
}
.btn-clock {
    &::before {
        background : url('/assets/icons/clock_16.svg') no-repeat center;
    }
}
.btn-reply {
    &::before {
        background : url('/assets/icons/reply_16.svg') no-repeat center;
    }
}
.btn-report {
    &::before {
        background : url('/assets/icons/report_16.svg') no-repeat center;
        }
}
.btn-comment {
    &::before {
        background : url('/assets/icons/comment_16.svg') no-repeat center;
    }
}
.btn-mute {
    &::before {
        background : url('/assets/icons/mute_16.svg') no-repeat center;
        }
}
.btn-submit {
    &::before {
        background : url('/assets/icons/send_16.svg') no-repeat center;
        }
}
.btn- {
    &::before {
        background : url('/assets/icons/') no-repeat center;
        }
}
.btn- {
    &::before {
        background : url('/assets/icons/') no-repeat center;
        }
}

.btn-activity {
    border: 0.15rem solid transparent;
    transition: border var(--transition-dur-hover);
    &:hover {
        border: 0.15rem solid var(--color-secondary-hover);
    }
}
.btn-active {
    border: 0.15rem solid var(--color-secondary-active);
    pointer-events: none;
}
.btn-icoonly{
    display         : flex;
    align-items     : center;
    justify-content : center;
    width           : fit-content;
    padding: 1.2rem 1rem;
    & img {
        filter: var(--filter-invert-on_off);
    }
    &:has(.btn-settings), &:has(.btn-save-active), &:has(.btn-save-empty), &:has(.btn-edit) {
        padding: 0;
    }
}


.btn-sm span{
    background-size: 1.6rem;
    width: 1.6rem;
    height: 1.6rem;
}

.btn-edit {
    background: url('/assets/icons/edit_16.svg') no-repeat center;
}

.btn-save-empty {
    background    : url("/assets/icons/heart-empty_24.svg") no-repeat center;
}

.btn-save-active {
    background    : url("/assets/icons/heart-full_24.svg") no-repeat center;
}

.btn-settings {
    background: url('/assets/icons/settings_24.svg') no-repeat center;
    justify-self: flex-end;
}

.btn-filled, .btn-filled-fancy {
    background : var(--color-bg-3);
    /* transition: border 300ms cubic-bezier(1, 0.02, 1, -0.27); */
    border     : 0.15rem solid var(--color-bg-4);

    &:hover {
        /* background: var(--color-secondary-hover); */
        border: .15rem solid var(--color-secondary-hover);
    }
}
.btn-filled-fancy {
    &:hover{
        animation: btn-fill var(--transition-dur-hover) 1 forwards;
    }
}
.btn-action {
    &:hover {
        border: .15rem solid var(--color-secondary-hover);
    }
    &.reacted{
        border: .15rem solid var(--color-secondary-active);
    }
}
.btn-action-primary, .btn-action-secondary {
    position: relative;
    &:hover::before {
        content: "";
        position: absolute;
        top: -0.2rem;
        left: -0.2rem;
        width: calc(100% + 0.4rem);
        height: calc(100% + 0.4rem);
        --grad-from: 0deg;
        border-radius: var(--btn-radius);
        animation: orbit-btn var(--transition-dur-hover) ease-in 1 forwards;
        z-index: -10;
    }
    &:hover::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        color: var(--color-fg-1);
        transform: translate(-50%, -50%);
        width: var(--beam-linear-w);
        height: var(--beam-linear-h);
        /* border: 1px solid rgba(1 1 1 / 0.2); */
        border-radius: var(--btn-radius);
        animation: linear-fill-button .2s ease-in .1s 1 forwards;
        z-index: 1;
    }
}
.btn-action-primary {
    &:hover::before {
        background: conic-gradient(
                from var(--grad-from),
                transparent var(--beam-1-end),
                var(--color-hl-pink) var(--beam-1-end),
                var(--color-hl-pink) var(--beam-1-start),
                transparent var(--beam-1-start),
                transparent var(--beam-2-end),
                var(--color-hl-pink) var(--beam-2-end),
                var(--color-hl-pink) var(--beam-2-start),
                transparent var(--beam-2-start)
        );
    }
    &:hover::after {
        background: var(--color-hl-pink);
    }
}
.btn-action-secondary {
    &:hover::before {
        background: conic-gradient(
                from var(--grad-from),
                transparent var(--beam-1-end),
                var(--color-secondary-hover) var(--beam-1-end),
                var(--color-secondary-hover) var(--beam-1-start),
                transparent var(--beam-1-start),
                transparent var(--beam-2-end),
                var(--color-secondary-hover) var(--beam-2-end),
                var(--color-secondary-hover) var(--beam-2-start),
                transparent var(--beam-2-start)
        );
    }
    &:hover::after {
        background: var(--color-secondary-hover);
    }
}
/* INFO the invert buttons determine whether the color of the background image is inverted in normal/hover and dark/light.
    The syntax is btn-invert-light_dark.
    Always-on & always-off speak for themselves.
      1 word on either side of _ denotes the case for normal & hover.
      2 words on either side denotes the invert status for normal, then hover.
      eg. onon_offon means inverted for both normal and hover in light mode, but only on hover in dark mode */
.btn-invert-never {
    & img {
        filter : var(--filter-invert-always_off);
    }
    & span {
        &::before {
            filter : var(--filter-invert-always_off);
        }
    }
}
.btn-invert-always {
    & img {
        filter : var(--filter-invert-always_on);
    }
    & span {
        &::before {
            filter : var(--filter-invert-always_on);
        }
    }
}
.btn-invert-off_on {
    & img {
        filter : var(--filter-invert-off_on);
    }
    & span {
        &::before {
            filter : var(--filter-invert-off_on);
        }
    }
    &:hover span, &:hover img {
        &::before {
            filter : var(--filter-invert-off_on);
        }
    }
}
.btn-invert-on_off {
    & img {
        filter : var(--filter-invert-on_off);
    }
    & span {
        &::before {
            filter : var(--filter-invert-on_off);
        }
    }
    &:hover span, &:hover img {
        &::before {
            filter : var(--filter-invert-on_off);
        }
    }
}
.btn-invert-onoff_offoff {
    & img {
        filter : var(--filter-invert-on_off);
    }
    & span {
        &::before {
            filter : var(--filter-invert-on_off);
        }
    }
    &:hover span, &:hover img {
        color: var(--color-light-1);
        &::before {
            filter : var(--filter-invert-always_off);
        }
    }
}
.btn-invert-onoff_onoff {
    & img {
        filter : var(--filter-invert-always_on);
    }
    & span {
        &::before {
            filter : var(--filter-invert-always_on);
        }
    }
    &:hover span, &:hover img {
        color: var(--color-light-1);
        &::before {
            filter : var(--filter-invert-always_off);
        }
    }
}
.btn-invert-onon_offoff {
    & img {
        filter : var(--filter-invert-on_off);
    }
    & span {
        &::before {
            filter : var(--filter-invert-on_off);
        }
    }
    &:hover span, &:hover img {
        color: var(--color-light-1);
        &::before {
            filter : var(--filter-invert-on_off);
        }
    }
}
.btn-invert-offon_offoff {
    & img {
        filter : var(--filter-invert-always_off);
    }
    & span {
        &::before {
            filter : var(--filter-invert-always_off);
        }
    }
    &:hover span, &:hover img {
        color: var(--color-light-1);
        &::before {
            filter : var(--filter-invert-on_off);
        }
    }
}
.s16 {
    & img {
        height: 1.6rem;
        aspect-ratio: 1 / 1;
    }

}
.s24 {
    & img {
        height       : 2.4rem;
        aspect-ratio : 1 / 1;
    }
}



/* -- dark light toggle --- */
.darklight, .allow-comments {
    width         : 7rem;
    height        : 3.4rem;
    border-radius : var(--btn-radius);
    border        : 0.2rem solid var(--color-secondary-border);
    position      : relative;
    cursor        : pointer;
    z-index       : 10;
    clip-path     : border-box;
    & input {
        opacity: 0;
        width: 0;
        height: 0;
    }
}
.darklight-border, .allow-comments-border {
    width         : 7rem;
    height        : 3.4rem;
    border-radius : var(--btn-radius);
    border        : 0.2rem solid var(--color-secondary-border);
    position      : absolute;
    top: 0;
    left: 0;
    z-index       : 11;
}
.darklight-fx, .allow-comments-fx {
    &::before {
        content       : '';
        position      : absolute;
        top           : .2rem;
        left          : .2rem;
        width         : 2.6rem;
        height        : 2.6rem;
        border-radius : var(--btn-radius);
        /* border: .2rem solid lab(from var(--color-hl-green-lab) calc(l - 20) calc(a - 0) calc(b - 0)); */
        background    : var(--color-hl-primary);
        transition: left ease-in-out var(--transition-dur-hover-darklight);
    }
}
.darklight-fx {
    &::after {
        content: url('/assets/icons/darklight.svg');
        filter: var(--filter-invert-on_off);
        position: absolute;
        top: calc(50% - 5.5rem);
        left: calc(50% - 7.3rem);
        height: 11rem;
        aspect-ratio: 1 / 1;
        transition: all ease-in-out var(--transition-dur-hover-darklight);
        z-index: -10;
    }
}
input:checked + .darklight-fx:before {
    left: 3.8rem;
}
input:checked + .darklight-fx:after {
    transform: rotate(90deg);
    left: calc(50% - 3.8rem);
    animation: fade-out-in ease-in-out var(--transition-dur-hover-darklight) 1 backwards;
}
/* -- allow comments toggle --- */
.allow-comments {
    width  : 3.5rem;
    height : 1.8rem;
}
.allow-comments-fx {
    &::before {
        top           : .1rem;
        left          : .1rem;
        width         : 1.2rem;
        height        : 1.2rem;
        border: .1rem solid lab(from var(--color-hl-green-lab) calc(l - 20) calc(a - 0) calc(b - 0));;
    }
}
input:checked + .allow-comments-fx:before {
    left: 1.8rem;
}
/*--- properties ---*/
@property --beam-1-start {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-1-end {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-2-start {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-2-end {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-linear-h {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
}
@property --beam-linear-w {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
}
/*--- keyframes ---*/
@keyframes fade-out-in {
    0%, 100% {
        opacity: 1;
    }
    30%, 70% {
        opacity: 0;
    }
}
@keyframes orbit-btn {
    0% {
        /*--grad-from: 90deg;*/
        --beam-1-end: 90deg;
        --beam-1-start: 90deg;
        --beam-2-end: 270deg;
        --beam-2-start: 270deg;
    }
    65%, 100% {
        --beam-1-end: 0deg;
        --beam-1-start: 180deg;
        --beam-2-end: 180deg;
        --beam-2-start: 360deg;
    }
    90%, 100% {
        /*filter: blur(2px);*/
    }
}
@keyframes linear-fill-button {
    5% {
        --beam-linear-w: 2%;
    }
    20% {
        --beam-linear-h: 100%;
        --beam-linear-w: 2%;
    }
    80%, 100% {
        --beam-linear-h: 100%;
        --beam-linear-w: 100%;
    }
}
@keyframes btn-fill {
    90% {
        background : var(--color-bg-3);
    }
    100% {
        background: var(--color-secondary-hover);
    }

}