/* -- custom properties -- */
/* ----------------------- */
/* ---- custom colours ---- */
    @property --color-bg-dark {
        syntax: "<color>";
        inherits: true;
        initial-value: #262A2F;
    }

@property --color-text-dark {
    syntax: "<color>";
    inherits: true;
    initial-value: #dddddd;
}

    @property --color-hl-pink {
        syntax: "<color>";
        inherits: false;
        initial-value: #EA4F92;
    }

    @property --color-hl-green {
        syntax: "<color>";
        inherits: false;
        initial-value: #8AD47F;
    }

    @property --color-hl-orange {
        syntax: "<color>";
        inherits: false;
        initial-value: #D56F3E;
    }

    @property --color-hl-yellow {
        syntax: "<color>";
        inherits: false;
        initial-value: #E2C044;
    }

    @property --font-h1 {
        syntax: "<length>";
        inherits: true;
        initial-value: 2ch;
    }
    @property --font-h2 {
        syntax: "<length>";
        inherits: true;
        initial-value: 1.3ch;
    }
    @property --font-h3 {
        syntax: "<length>";
        inherits: true;
        initial-value: 1ch;
    }
    @property --font-h4 {
        syntax: "<length>";
        inherits: true;
        initial-value: 1.3ch;
    }
    @property --font-h5 {
        syntax: "<length>";
        inherits: true;
        initial-value: .3ch;
    }

html {
    font-family: system-ui;
}
a, a:visited, a:link, a:active {
    text-decoration: none;
    cursor: pointer;
    color: inherit;
}
/* this is an example of their implementation, as well as a
nice neat way of getting an accent colour */
/* edit: I got carried away and ended up doing loads of styling because, well, it's fun isn't it? :D */
body {
    max-width: 95%;
    margin-inline: auto;
}


/* ---- grid containers ---- */
.grid-container-auto15rem {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));
    column-gap: 1rem;
    row-gap: .3rem;
}

/* ---- flex containers ---- */
.flex-container-row {
    display: flex;
}
.flex-container-column {
    display: flex;
    flex-direction: column;
}

/* ---------------------------------------- */

/* prevent special form element styling  */
legend,
fieldset,
select,
textarea,
input,
button {
    background: transparent;
    padding: 0;
    margin: 0;
    /*-webkit-appearance: none;*/
    /*-moz-appearance: none;*/
    /*appearance: none;*/
    border: none;
}

textarea,
input {
    border: 1px solid color-mix(in hsl, hsl(100 0 100), var(--color-bg-dark) 90%);
    border-radius: .25rem;
}

select {
    background: url("assets/images/down-arrow.svg") no-repeat center right 0.75rem;
}

input[type="checkbox"]:checked {
    background: url('assets/images/check.svg') no-repeat center / 75% auto;
}

.wrapper-form {
    background: var(--color-bg-dark);
    color: var(--color-text-dark);
    max-width: 20rem;
    padding: .6rem;
    margin: 1rem auto;
    border: 1px solid color-mix(in hsl, hsl(100 0 100), var(--color-bg-dark) 80%);
    border-radius: 1rem;
    box-shadow: rgba(0, 0, 0, 0.16) 0 3px 6px, rgba(0, 0, 0, 0.23) 0 3px 6px;
}

.noborder {
    border: none
}

.card {
    display: grid;
    grid-template-rows: subgrid;
    grid-row: span 5;
    color: color-mix(in hsl, #fff, #000 15%);
    background: var(--color-bg-dark);
    border: 1px solid color-mix(in hsl, hsl(100 0 100), var(--color-bg-dark) 80%);
    border-radius: .3rem;
    padding: 1rem;
    box-shadow: rgba(0, 0, 0, 0.16) 0 3px 6px, rgba(0, 0, 0, 0.23) 0 3px 6px;
}

@property --grad-start-pos {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --mid-pink-pos {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 42%;
}
@property --color-ratio {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
}
@property --grad-from {
    syntax: "<angle>";
    inherits: false;
    initial-value: 65deg;
}
@property --pink-start {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
}
@property --pink-end {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
}
@property --trans-start {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
}
@property --trans-end {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
}
/* ------------- light beams ------------ */
@property --beam-1-start {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-1-centre {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-1-fade {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-1-end {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-2-start {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-2-fade {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-2-end {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-3-start {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-3-fade {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-3-end {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-4-start {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-4-fade {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-4-end {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
/* ----- linear ----- */
@property --beam-linear-h {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
}
@property --beam-linear-w {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
}
.card:nth-child(1) {
    border: none;
    position: relative;
}
.card:nth-child(1):hover::before {
    content: "";
    position: absolute;
    top: -1px;
    left: -1px;
    width: calc(100% + 2px);
    height: calc(100% + 2px);
    background: conic-gradient(
        from var(--grad-from),
        transparent var(--beam-1-end),
        var(--color-hl-pink) var(--beam-1-end),
        var(--color-hl-pink) var(--beam-1-start),
        transparent var(--beam-1-start),
        transparent var(--beam-2-end),
        var(--color-hl-pink) var(--beam-2-end),
        var(--color-hl-pink) var(--beam-2-start),
        transparent var(--beam-2-start)
    );
    --grad-from: 0deg;
    border-radius: .3rem;
    animation: orbit .4s ease-in 1 forwards;
    z-index: -1000;
}
.card:nth-child(1):hover::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: var(--beam-linear-w);
    height: var(--beam-linear-h);
    background: var(--color-hl-pink);
    border-radius: .3rem;
    animation: linear .4s linear 1 forwards;
    z-index: -1;
}
.card:nth-child(1):hover {
    animation: fade-out .4s linear 1 forwards;
}
@keyframes fade-out {
    65% {
        background: var(--color-bg-dark);
    }
    100% {
        background: transparent;
    }
}
@keyframes orbit {
    0% {
        /*--grad-from: 90deg;*/
        --beam-1-end: 90deg;
        --beam-1-start: 90deg;
        --beam-2-end: 270deg;
        --beam-2-start: 270deg;
    }
    65%, 100% {
        --beam-1-end: 0deg;
        --beam-1-start: 180deg;
        --beam-2-end: 180deg;
        --beam-2-start: 360deg;
    }
}
@keyframes linear {
    66% {
        --beam-linear-h: 100%;
        --beam-linear-w: 0%;
    }
    100% {
        --beam-linear-h: 100%;
        --beam-linear-w: 100%;
    }
}
.card:nth-child(2) {
    border: none;
    position: relative;
}
.card:nth-child(2):hover::before {
    content: "";
    position: absolute;
    top: -1px;
    left: -1px;
    width: calc(100% + 2px);
    height: calc(100% + 2px);
    background: conic-gradient(
            from var(--grad-start-pos),
            var(--color-hl-pink) 1%,
            color-mix(in srgb, var(--color-hl-pink), var(--color-bg-dark)85%) 5%,
            color-mix(in srgb, var(--color-hl-pink), var(--color-bg-dark)85%) 25%,
            var(--color-hl-pink) 34%,
            color-mix(in srgb, var(--color-hl-pink), var(--color-bg-dark)85%) 39%,
            var(--color-hl-pink) var(--mid-pink-pos),
            color-mix(in srgb, var(--color-hl-pink), var(--color-bg-dark)85%) 72%,
            var(--color-hl-pink) 88%,
            color-mix(in srgb, var(--color-hl-pink), var(--color-bg-dark)85%) 92%,
            color-mix(in srgb, var(--color-hl-pink), var(--color-bg-dark)85%) 98%,
            var(--color-hl-pink) 100%
    );

    border-radius: .3rem;
    animation: gradient 1.6s linear infinite;
    z-index: -1000;
}
@keyframes gradient {
    25% {
        --mid-pink-pos: 57%;
    }
    50% {
        --grad-start-pos: 180deg;
        --mid-pink-pos: 71%;
    }
    75% {
        --mid-pink-pos: 57%;
    }
    100% {
        --grad-start-pos: 359deg;
        --mid-pink-pos: 42%;
    }
}
.card:nth-child(3) {
    /*border: 1px inset color-mix(in hsl, hsl(100 0 100), var(--color-bg-dark) 80%);*/
    position: relative;
}
@keyframes glow-breathe {
    0%, 100% {
        --color-ratio: 0%;
    }
    4%, 90% {
        --color-ratio: 100%;
    }
    50% {
        --color-ratio: 70%;
    }
}
/*.card:nth-child(3)::before {*/
/*    content: "";*/
/*    position: absolute;*/
/*    width: 100%;*/
/*    height: 100%;*/
/*    border: 1px outset color-mix(in srgb, var(--color-hl-pink), var(--color-bg-dark) 85%);*/
/*    border-radius: .3rem;*/
/*    background: transparent;*/
/*}*/
.card:nth-child(3):hover::before {
    content: "";
    position: absolute;
    top: -2px;
    left: -2px;
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    filter: blur(.5rem);
    border-radius: .3rem;
    background: conic-gradient(
            from var(--grad-from),
            var(--color-hl-pink) var(--beam-1-start),
            transparent var(--beam-1-start),
            transparent var(--beam-2-end),
            transparent var(--beam-2-fade),
            var(--color-hl-pink) var(--beam-2-start),
            transparent var(--beam-2-start),
            transparent var(--beam-3-end),
            transparent var(--beam-3-fade),
            var(--color-hl-pink) var(--beam-3-start),
            transparent var(--beam-3-start),
            transparent var(--beam-4-end),
            transparent var(--beam-4-fade),
            var(--color-hl-pink) var(--beam-4-start),
            transparent var(--beam-4-start),
            transparent var(--beam-1-end),
            transparent var(--beam-1-fade),
            var(--color-hl-pink) var(--beam-1-centre)
    );
    --grad-from: 90deg;
    --beam-4-end: 270deg;
    --beam-4-fade: 270deg;
    --beam-4-start: 270deg;
    --beam-3-end: 180deg;
    --beam-3-fade: 180deg;
    --beam-3-start: 180deg;
    --beam-2-end: 90deg;
    --beam-2-fade: 90deg;
    --beam-2-start: 90deg;
    --beam-1-end: 270deg;
    --beam-1-fade: 360deg;
    --beam-1-centre: 360deg;
    --beam-1-start: 0deg;
    animation: rotate-and-spread 3s linear infinite;
    z-index: -500;
}
.card:nth-child(3):hover::after {
    content: "";
    position: absolute;
    top: -2px;
    left: -2px;
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    border-radius: .3rem;
    background: conic-gradient(
    from var(--grad-from),
    var(--color-hl-pink) var(--beam-1-start),
    transparent var(--beam-1-start),
    transparent var(--beam-2-end),
    transparent var(--beam-2-fade),
    var(--color-hl-pink) var(--beam-2-start),
    transparent var(--beam-2-start),
    transparent var(--beam-3-end),
    transparent var(--beam-3-fade),
    var(--color-hl-pink) var(--beam-3-start),
    transparent var(--beam-3-start),
    transparent var(--beam-4-end),
    transparent var(--beam-4-fade),
    var(--color-hl-pink) var(--beam-4-start),
    transparent var(--beam-4-start),
    transparent var(--beam-1-end),
    transparent var(--beam-1-fade),
    var(--color-hl-pink) var(--beam-1-centre)
    );
    --grad-from: 90deg;
    --beam-4-end: 270deg;
    --beam-4-fade: 270deg;
    --beam-4-start: 270deg;
    --beam-3-end: 180deg;
    --beam-3-fade: 180deg;
    --beam-3-start: 180deg;
    --beam-2-end: 90deg;
    --beam-2-fade: 90deg;
    --beam-2-start: 90deg;
    --beam-1-end: 270deg;
    --beam-1-fade: 360deg;
    --beam-1-centre: 360deg;
    --beam-1-start: 0deg;
    animation: rotate-and-spread 3s linear infinite;
    z-index: -1000;
}
@keyframes rotate-and-spread {
    10%, 25% {
        /*--grad-from: 135deg;*/
        --beam-4-end: 180deg;
        --beam-4-fade: 225deg;
        --beam-4-start: 270deg;
        --beam-3-end: 180deg;
        --beam-3-fade: 180deg;
        --beam-3-start: 180deg;
        --beam-1-end: 270deg;
        --beam-1-fade: 360deg;
    }
    25% {
        --grad-from: 180deg
    }
    35%, 50% {
        /*--grad-from: 225deg;*/
        --beam-3-end: 90deg;
        --beam-3-fade: 135deg;
        --beam-3-start: 180deg;
        --beam-2-end: 90deg;
        --beam-2-fade: 90deg;
        --beam-2-start: 90deg;
    }
    50% {
        --grad-from: 270deg
    }
    60%, 75% {
        /*--grad-from: 315deg;*/
        --beam-2-end: 5deg;
        --beam-2-fade: 45deg;
        --beam-2-start: 90deg;
        --beam-1-end: 270deg;
        --beam-1-fade: 360deg;
        --beam-1-centre: 360deg;
        --beam-1-start: 0deg;
    }
    75% {
        --grad-from: 360deg
    }
    85% {
        /*--grad-from: 405deg;*/
        --beam-1-end: 270deg;
        --beam-1-fade: 315deg;
    }
    95% {
        /*--grad-from: 450deg;*/
        --beam-4-end: 270deg;
        --beam-4-fade: 315deg;
        --beam-4-start: 360deg;
        --beam-3-end: 270deg;
        --beam-3-fade: 315deg;
        --beam-3-start: 360deg;
        --beam-2-end: 270deg;
        --beam-2-fade: 315deg;
        --beam-2-start: 360deg;
        --beam-1-end: 270deg;
        --beam-1-fade: 315deg;
        --beam-1-centre: 360deg;
        --beam-1-start: 0deg;
    }
    100% {
        --grad-from: 360deg;
        --beam-4-fade: 360deg;
        --beam-3-fade: 360deg;
        --beam-2-fade: 360deg;
        --beam-1-fade: 360deg;
    }
}
.card:nth-child(4) {
    position: relative;
}
.card:nth-child(4):hover::after {
    content: "";
    position: absolute;
    top: -1px;
    left: -1px;
    width: calc(100% + 2px);
    height: calc(100% + 2px);
    background: transparent;
    border: 1px solid color-mix(in srgb, var(--color-hl-pink) var(--color-ratio), var(--color-bg-dark));
    animation: glow-breathe 15s ease-in-out .45s 1;
    border-radius: .3rem;
    z-index: 1000;
}
.card:nth-child(4):hover::before {
    content: "";
    position: absolute;
    top: -2px;
    left: -2px;
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    background: conic-gradient(
            from var(--grad-from),
            transparent var(--trans-start),
            var(--color-hl-pink) var(--pink-start),
            var(--color-hl-pink) var(--pink-end),
            transparent var(--trans-end)
    );
    border-radius: .3rem;
    z-index: -1000;
    animation: dash .65s linear 1;
}
@keyframes dash {
    15% {
        --pink-start: 0%;
        --trans-start: 0%;
    }
    30% {
        --pink-start: 14%;
        --trans-start: 14%;
        --pink-end: 60%;
        --trans-end: 60%;
    }
    45% {
        --pink-start: 34%;
        --trans-start: 34%;
        --pink-end: 80%;
        --trans-end: 80%;
    }
    70% {
        --pink-end: 100%;
        --trans-end: 100%;
    }
    100% {
        --pink-start: 100%;
        --trans-start: 100%;
    }
}

.title {
    font-size: 3ch;
    margin: .5ch;
    text-align: center;
}

.button {
    background: var(--color-hl-orange);
    border: 1px solid color-mix(in hsl, hsl(100 0 0), var(--color-hl-orange) 80%);
    border-radius: 1rem;
    padding: 0 .5rem;
    margin: .6rem 0;
    cursor: pointer;
}

.cardTitle {
    font-size: 2ch;
}
.cardAuthor {
    font-size: 1.3ch;
}
.cardChannel {
    font-size: 1.3ch;
}
.cardDate {
    font-size: .8ch;
}
.cardContent {
    font-size: 1.5ch;
    height: 3.8ch;
    overflow: clip;
    text-overflow: ellipsis;
}



