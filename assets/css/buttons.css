:root {
    --btn-radius: 2.4rem;
}
button, .button {
    cursor: pointer;
    & span, & img {
        z-index: 11;
    }
}
.button-sm {
    display: flex;
    border-radius : var(--btn-radius);
    padding       : 0.4rem 0.8rem;
    font-size  : 1.2rem;
    height: 3.2rem;
    gap: 0.4rem;
}

.button-md {
    display: flex;
    border-radius : var(--btn-radius);
    padding       : 0.8rem 1.6rem 0.8rem 1.6rem;
    font-size  : 1.2rem;
    height: 3.6rem;
    gap: 0.8rem;
    & img {
        width: 1.6rem;
        height: 1.6rem;
    }
    & span {
        background-size: 1.6rem;
        height: 2.4rem;
        padding: 0 0 0 2rem;
    }
}

.button-lg {
    display: flex;
    border-radius : var(--btn-radius);
    padding       : 1.2rem 2.4rem 1.2rem 2rem;
    font-size  : 1.6rem;
    gap: 1.2rem;
    height: 4rem;
    & img {
        width: 2.4rem;
        height: 2.4rem;
    }
    & span {
        background-size: 2.4rem;
        height: 4rem;
        width: fit-content;
        padding: 0 0 0 2.8rem;
    }
}
.btn-primary {
    background : var(--color-hl-primary);
    border     : 0.15rem solid transparent;
    color      : var(--color-dark-1);
    transition: all var(--transition-dur-hover);
    & span {
        filter: invert(0);
        color: var(--color-dark-1);
        transition: color var(--transition-dur-hover);
    }
    & img {
        transition: filter var(--transition-dur-hover);
    }
    &:hover {
        border     : 0.15rem solid var(--color-hl-pink);
        & img {
        }
        & span {
            filter: invert(1);
            /*color: var(--color-light-1);*/
        }
    }
}

.btn-secondary {
    background : transparent;
    border     : 0.15rem solid var(--color-secondary-border);
    color      : var(--color-fg-1);
    transition: all var(--transition-dur-hover);
    &:hover {
        border: 0.15rem solid var(--color-secondary-hover);
    }
    & img {
        filter : var(--filter-invert-off);
    }
    & span {
    }
}

.btn-icotext {
    display         : flex;
    align-items     : center;
    justify-content : center;
    width           : fit-content;
    & span {
        background-position: left;
        align-content: center;
        text-align: right;
        width: fit-content;
    }
}
.btn-following {
    background: url('/assets/icons/following_24.svg') no-repeat center;
}
.btn-followers {
    background: url('/assets/icons/followers_24.svg') no-repeat center;
}
.btn-posts {
    background: url('/assets/icons/post-black_16.svg') no-repeat center;
}
.btn-notifications {
    background: url('/assets/icons/notification_16.svg') no-repeat center;
}
.btn-follow {
    background: url('/assets/icons/arrow-right-grey_24.svg') no-repeat center;
}
.btn-activity {
    border: 0.15rem solid transparent;
    transition: border var(--transition-dur-hover);
    &:hover {
        border: 0.15rem solid var(--color-fg-3);
    }
}
.btn-active {
    border: 0.15rem solid var(--color-secondary-active);
    pointer-events: none;
    /* TODO use Kamils lab mixes */
}
.btn-noinvert {
    & img {
        filter : invert(0);
    }
}

.btn-icoonly{
    display         : flex;
    align-items     : center;
    justify-content : center;
    width           : fit-content;
    padding: 1.2rem 1rem;
}

.btn-filled {
    background : var(--color-bg-3);
    border     : 0.15rem solid var(--color-bg-4);
}

.btn-action-primary, .btn-action-secondary {
    position: relative;
    &:hover::before {
        content: "";
        position: absolute;
        top: -0.2rem;
        left: -0.2rem;
        width: calc(100% + 0.4rem);
        height: calc(100% + 0.4rem);
        --grad-from: 0deg;
        border-radius: var(--btn-radius);
        animation: orbit-btn .3s ease-in 1 forwards;
        z-index: -10;
    }

    &:hover::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        color: var(--color-fg-1);
        transform: translate(-50%, -50%);
        width: var(--beam-linear-w);
        height: var(--beam-linear-h);
        border-radius: var(--btn-radius);
        animation: linear-fill-button .2s ease-in .1s 1 forwards;
        z-index: 10;
    }
}

.btn-action-primary {
    &:hover::before {
        background: conic-gradient(
                from var(--grad-from),
                transparent var(--beam-1-end),
                var(--color-hl-pink) var(--beam-1-end),
                var(--color-hl-pink) var(--beam-1-start),
                transparent var(--beam-1-start),
                transparent var(--beam-2-end),
                var(--color-hl-pink) var(--beam-2-end),
                var(--color-hl-pink) var(--beam-2-start),
                transparent var(--beam-2-start)
        );
    }
    &:hover::after {
        background: var(--color-hl-pink);
    }
}
.btn-action-secondary {
    &:hover::before {
        background: conic-gradient(
                from var(--grad-from),
                transparent var(--beam-1-end),
                var(--color-secondary-hover) var(--beam-1-end),
                var(--color-secondary-hover) var(--beam-1-start),
                transparent var(--beam-1-start),
                transparent var(--beam-2-end),
                var(--color-secondary-hover) var(--beam-2-end),
                var(--color-secondary-hover) var(--beam-2-start),
                transparent var(--beam-2-start)
        );
    }
    &:hover::after {
        background: var(--color-secondary-hover);
    }
}
/* -- dark light toggle --- */
.darklight {
    width         : 7rem;
    height        : 3.4rem;
    border-radius : var(--btn-radius);
    border        : 0.2rem solid var(--color-secondary-border);
    position      : relative;
    cursor        : pointer;
    z-index       : 10;
    clip-path     : border-box;
    & input {
        opacity: 0;
        width: 0;
        height: 0;
    }
}
.darklight-border {
    width         : 7rem;
    height        : 3.4rem;
    border-radius : var(--btn-radius);
    border        : 0.2rem solid var(--color-secondary-border);
    position      : absolute;
    top: 0;
    left: 0;
    z-index       : 11;
}
.darklight-fx {
    &::before {
        content       : '';
        position      : absolute;
        top           : .2rem;
        left          : .2rem;
        width         : 2.6rem;
        height        : 2.6rem;
        border-radius : var(--btn-radius);
        /*TODO fix this border*/
        border: .2rem solid color-mix(in lab, var(--color-hl-green-lab) 70%, var(--color-black-lab));
        background    : var(--color-hl-primary);
        transition: left var(--transition-dur-hover-darklight);
    }
    &::after {
        content: url('/assets/icons/darklight.svg');
        filter : var(--filter-invert-off);
        position: absolute;
        top: calc(50% - 5.5rem);
        left: calc(50% - 7.3rem);
        height: 11rem;
        aspect-ratio: 1 / 1;
        transition: all var(--transition-dur-hover-darklight);
        z-index: -10;
    }
}
input:checked + .darklight-fx:before {
    left: 3.8rem;
}
input:checked + .darklight-fx:after {
    transform: rotate(90deg);
    left: calc(50% - 3.8rem);
    animation: fade-out-in var(--transition-dur-hover-darklight) linear 1 forwards;
}
/*--- properties ---*/
@property --beam-1-start {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-1-end {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-2-start {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-2-end {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}
@property --beam-linear-h {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
}
@property --beam-linear-w {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
}
/*--- keyframes ---*/
@keyframes fade-out-in {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0;
    }
}
@keyframes orbit-btn {
    0% {
        /*--grad-from: 90deg;*/
        --beam-1-end: 90deg;
        --beam-1-start: 90deg;
        --beam-2-end: 270deg;
        --beam-2-start: 270deg;
    }
    65%, 100% {
        --beam-1-end: 0deg;
        --beam-1-start: 180deg;
        --beam-2-end: 180deg;
        --beam-2-start: 360deg;
    }
    90%, 100% {
        /*filter: blur(2px);*/
    }
}
@keyframes linear-fill-button {
    5% {
        --beam-linear-w: 2%;
    }
    20% {
        --beam-linear-h: 100%;
        --beam-linear-w: 2%;
    }
    80%, 100% {
        --beam-linear-h: 100%;
        --beam-linear-w: 102%;
    }
}