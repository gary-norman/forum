:root {
  --btn-radius: 2.4rem;
  cursor: url('/assets/cursors/default.svg'), auto;
  --cursor-text: url('/assets/cursors/text.svg'), text;
  --cursor-minus: url('/assets/cursors/minus.svg'), auto;
  --cursor-plus: url('/assets/cursors/plus.svg'), cell;
  --cursor-pointer: url('/assets/cursors/pointer.svg'), pointer;
  --cursor-info: url('/assets/cursors/info.svg'), help;
}
/* SECTION -------- cursors --------*/
body {

}
.cursor-text {
  cursor: url('/assets/cursors/text.svg'), text;
}
.cursor-minus {
  cursor: url('/assets/cursors/minus.svg'), auto;
}
.cursor-plus {
  cursor: url('/assets/cursors/plus.svg'), cell;
}
.cursor-pointer {
  cursor: url('/assets/cursors/pointer.svg'), pointer;
}
.cursor-info {
  cursor: url('/assets/cursors/info.svg'), help;
}
/* SECTION -------- buttons --------*/
button,
.button {
  cursor: url('/assets/cursors/pointer.svg'), pointer;
  & span,
  & img {
    /*z-index: calc(var(--z-index-button) + 10);*/
    pointer-events: none;
  }
}
.btn-pill {
  display: flex;
  border-radius: var(--btn-radius);
  height: fit-content;
  padding: 0.6rem;
}
.btn-sm {
    display: flex;
    border-radius : var(--btn-radius);
    padding       : 0.4rem 0.8rem;
    font-size  : 1.2rem;
    height: 3.2rem;
    gap: 0.4rem;
    &.btn-icoonly > span {
        height: 1.6rem;
        width: 1.6rem;
        background-size: 1.6rem;
        align-items: center;
        text-align: center;
        justify-content: center;
    }
    &.btn-icotext > span{
      padding: 0 0 0 2rem;
    }
    &.btn-icotext.ico-right > span{
      padding: 0 2rem 0 0;
    }
}


.btn-md {
display: flex;
border-radius : var(--btn-radius);
padding       : 0.8rem 1.6rem;
font-size  : 1.2rem;
height: 3.6rem;
gap: 0.8rem;

  &.btn-icoonly > span {
    height: 2.4rem;
    width: 2.4rem;
    background-size: 2.4rem;
    align-items: center;
    text-align: center;
    justify-content: center;
  }
  &.btn-icotext > span{
    padding: 0 0 0 2rem;
  }
  &.btn-icotext.ico-right > span{
    padding: 0 2rem 0 0;
  }
}

.btn-lg {
  display: flex;
  border-radius: var(--btn-radius);
  padding: 1.2rem 2.4rem 1.2rem 2rem;
  font-size: 1.6rem;
  gap: 1.2rem;
  height: 4rem;
  &.btn-icoonly > span {
    height: 3.2rem;
    width: 3.2rem;
    background-size: 3.2rem;
    align-items: center;
    text-align: center;
    justify-content: center;
  }
  &.btn-icotext > span{
    padding: 0 0 0 2.4rem;
  }
}
  &.btn-icotext.ico-right > span{
    padding: 0 2.4rem 0 0;
  }
}

.btn-primary {
  width: fit-content;
  background: var(--color-hl-primary);
  /* border     : 0.15rem solid transparent; */
  color: var(--color-light-1);
  transition: all var(--transition-dur-hover);
  & span {
    color: var(--color-dark-1);
    /*&::before {*/
    /* filter: var(--filter-invert-always_on) !important; */
    /*    !*background: rgb(255 255 255 / .3);*!*/
    /*    !*filter: invert(1);*!*/
    /*}*/
    transition: all var(--transition-dur-hover) ease-in-out;
  }
  &:hover {
    & span {
      /*filter: invert(0);*/
      /*&::before {*/
      /*    filter: var(--filter-invert-always_off) !important;*/
      /*}*/
    }
  }
}
.btn-register-submit {
  margin: .8rem 0 0 0
}
.btn-follows {
  & span {
    &::before {
      padding: 0.6rem 1rem 0.6rem 0;
    }
  }
}

.btn-secondary {
  /* background : transparent; */
  /* border     : 0.15rem solid var(--color-secondary-border); */
  color: var(--color-fg-2);

}

.btn-teritary {
  & span {
    text-align: center;
    align-self: center;
  }
  &:hover {
    background-color: var(--color-bg-1);
  }
  &:active {
    background-color: var(--color-bg-3);
  }

}

.btn-icotext {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: max-content;
  & span {
    align-content: center;
    text-align: right;
    width: fit-content;
    /*z-index: calc(var(--z-index-button) + 1);*/
    &::before {
      filter: var(--filter-invert-on_off);
      background-position: left !important;
      content: "";
      position: absolute;
      top: 0;
      left: 1.2rem;
      width: 100%;
      height: 100%;
    }
  }
  &.ico-right {
    & span {
      text-align: left;
      &::before {
        background-position: right !important;
        left: -1.2rem !important;
      }
    }
  }
}
/* --- button icon span classes --- */
/*TODO embed SVGs*/
/*url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' style='pointer-events:none;display:block;width:100%25;height:100%25;fill:%23757575'%3E%3Cpath d='M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61.0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z'/%3E%3C/svg%3E") no-repeat 4px center/20px 20px;*/
.btn-following {
  &::before {
    background: url("/assets/icons/following_24.svg") no-repeat center;
  }
}
.btn-followers {
  &::before {
    background: url("/assets/icons/followers_24.svg") no-repeat center;
  }
}
.btn-follow {
  &::before {
    background: url("/assets/icons/arrow-right-white_24.svg") no-repeat center;
  }
}
.btn-posts {
  &::before {
    background: url("/assets/icons/post_16.svg") no-repeat center;
  }
}
.btn-notifications {
  &::before {
    background: url("/assets/icons/notification_16.svg") no-repeat center;
  }
}
.btn-filters {
  &::before {
    left: 2rem;
    background: url("/assets/icons/arrow-down_16.svg") no-repeat center;
  }
}
.btn-sort {
  &::before {
    background: url("/assets/icons/sort_16.svg") no-repeat center;
  }
}
.btn-likes {
  &::before {
    background: url("/assets/icons/likes_16.svg") no-repeat center;
  }
}
.btn-dislikes {
  &::before {
    background: url("/assets/icons/dislikes_16.svg") no-repeat center;
  }
}
.btn-share {
  &::before {
    background: url("/assets/icons/share_16.svg") no-repeat center;
  }
}
.btn-heart-full {
  &::before {
    background: url("/assets/icons/heart-full_24.svg") no-repeat center;
  }
}
.btn-heart-empty {
  &::before {
    background: url("/assets/icons/heart-empty_24.svg") no-repeat center;
  }
}
.btn-clock {
  &::before {
    background: url("/assets/icons/clock_16.svg") no-repeat center;
  }
}
.btn-reply {
  &::before {
    background: url("/assets/icons/reply_16.svg") no-repeat center;
  }
}
.btn-md>.btn-edit {
  &::before {
    background: url("/assets/icons/edit_16.svg") no-repeat center;
  }
}
.btn-sm>.btn-edit {
  transition: all var(--transition-dur-hover) ease-in-out;
  background: url("/assets/icons/edit_16.svg") no-repeat center;
  width: 1.6rem;
}

.btn-reply-comment {
  &::before {
    background: url("/assets/icons/reply_comment_16.svg") no-repeat center;
  }
}
.btn-report {
  &::before {
    background: url("/assets/icons/report_16.svg") no-repeat center;
  }
}
.btn-comment {
  &::before {
    background: url("/assets/icons/comment_16.svg") no-repeat center;
  }
}
.btn-mute {
  &::before {
    background: url("/assets/icons/mute_16.svg") no-repeat center;
  }
}
.btn-ban {
  &::before {
    background: url("/assets/icons/ban_16.svg") no-repeat center;
  }
}
.btn-submit {
  &::before {
    background: url("/assets/icons/send_16.svg") no-repeat center;
  }
}
.btn-channel-users {
  &::before {
    background: url("/assets/icons/users_16.svg") no-repeat center;
  }
}
/* FIXME span css conflicts with .btn-icotext & span &::before */
.btn-channel-green-dot {
  &::before {
    content: "â€¢";
    color: var(--color-hl-primary);
    font-size: 2.8rem;
    position: absolute;
    left: 1.6rem;
    top: 0.4rem;
    transform: translate(0, -47%);
  }
}

.btn-activity {
  border: 0.15rem solid transparent;
  transition: border var(--transition-dur-hover);
  &:hover {
    border: 0.15rem solid var(--color-secondary-hover);
  }
}
.btn-active {
  border: 0.15rem solid var(--color-secondary-active);
  pointer-events: none;
}
.btn-icoonly {
  display: flex;
  align-items: center;
  justify-content: center;
  width: fit-content;
  padding: 1.2rem 0.4rem;
  & img {
    filter: var(--filter-invert-on_off);
  }
  &:has(.btn-settings),
  &:has(.btn-save-active),
  &:has(.btn-save-empty),
  &:has(.btn-edit),
  &:has(.btn-cancel),
  &:has(.btn-success)  {
    padding: 0;
  }
  &:has(.btn-warning), &:has(.btn-success){
    cursor        : default;
  }
}

.btn-md span{
    /*background-size: 2.4rem;*/
    /*height: 2.4rem;*/
}

.btn-add {
  transition: all var(--transition-dur-hover) ease-in-out;
  background : url('/assets/icons/add_circle_16.svg') no-repeat center;
}
.btn-minus {
  transition: all var(--transition-dur-hover) ease-in-out;
  background : url('/assets/icons/minus_circle_16.svg') no-repeat center;
}

.btn-cancel {
  transition: all var(--transition-dur-hover) ease-in-out;
  background: url("/assets/icons/close_16.svg") no-repeat center;
}

.btn-success {
  transition: all var(--transition-dur-hover) ease-in-out;
  background : url('/assets/icons/success_16.svg') no-repeat center;
}

.btn-copy {
    transition: all var(--transition-dur-hover) ease-in-out;
    background: url('/assets/icons/copy_16.svg') no-repeat center;
    width: 1.6rem;

}



.btn-warning {
    transition: all var(--transition-dur-hover) ease-in-out;
    background : url('/assets/icons/warning_16.svg') no-repeat center;
}
.btn-save {
  &:hover > span {
    background: url("/assets/icons/heart-full_24.svg") no-repeat center;
    background-size: 1.6rem;
  }
}
.btn-save-empty {
  background: url("/assets/icons/heart-empty_24.svg") no-repeat center;
}
.btn-save-active {
  background: url("/assets/icons/heart-full_24.svg") no-repeat center;
}
.btn-settings {
  background: url("/assets/icons/settings_24.svg") no-repeat center;
  justify-self: flex-end;
}
.btn-filled,
.btn-filled-fancy {
  background: var(--color-bg-3);
  /* transition: border 300ms cubic-bezier(1, 0.02, 1, -0.27); */
  border: 0.15rem solid var(--color-bg-4);

  &:hover {
    /* background: var(--color-secondary-hover); */
    border: 0.15rem solid var(--color-secondary-hover);
  }


  &.selected {
    color: var(--color-fg-1);
  }
}
.btn-filled-fancy {
  &:hover {
    animation: btn-fill var(--transition-dur-hover) 1 forwards;
  }
}
.btn-filled-firebrick {
  background: firebrick;
  border: 0.15rem solid lab(from firebrick calc(l - 20) calc(a - 0) calc(b - 0));
}
.btn-filled-orange {
  background: var(--color-hl-orange);
  border: 0.15rem solid
    lab(from var(--color-hl-orange) calc(l - 20) calc(a - 0) calc(b - 0));
}
.btn-filled-white_orange {
  background: var(--color-fg-1);
  border: 0.15rem solid var(--color-hl-orange);
  color: lab(from var(--color-hl-orange) calc(l - 20) calc(a - 0) calc(b - 0));
}
.btn-action {
&:hover {
    border: .15rem solid var(--color-secondary-hover);
}
&.inactive{
  pointer-events: none;
  &:hover {
    border: 0.15rem solid var(--color-bg-4);
  }
}
&.active{
    border: .15rem solid var(--color-secondary-active);
}
}
.btn-action-primary,
.btn-action-secondary {
  position: relative;
  z-index: var(--z-index-btn-action);
  &:hover::before {
    content: "";
    position: absolute;
    top: -0.2rem;
    left: -0.2rem;
    width: calc(100% + 0.4rem);
    height: calc(100% + 0.4rem);
    --grad-from: 0deg;
    border-radius: var(--btn-radius);
    animation: orbit-btn var(--transition-dur-hover) ease-in 1 forwards;
    z-index: calc(var(--z-index-btn-action) - 10);
  }
  &:hover::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    color: var(--color-fg-1);
    transform: translate(-50%, -50%);
    width: var(--beam-linear-w);
    height: var(--beam-linear-h);
    /* border: 1px solid rgba(1 1 1 / 0.2); */
    border-radius: var(--btn-radius);
    animation: linear-fill-button 0.2s ease-in 0.1s 1 forwards;
    z-index: calc(var(--z-index-btn-action) + 1);
  }
}
.btn-action-primary {
  &:hover::before {
    background: conic-gradient(
      from var(--grad-from),
      transparent var(--beam-1-end),
      var(--color-hl-pink) var(--beam-1-end),
      var(--color-hl-pink) var(--beam-1-start),
      transparent var(--beam-1-start),
      transparent var(--beam-2-end),
      var(--color-hl-pink) var(--beam-2-end),
      var(--color-hl-pink) var(--beam-2-start),
      transparent var(--beam-2-start)
    );
  }
  &:hover::after {
    background: var(--color-hl-pink);
  }
}
.btn-action-secondary {
  &:hover::before {
    background: conic-gradient(
      from var(--grad-from),
      transparent var(--beam-1-end),
      var(--color-secondary-hover) var(--beam-1-end),
      var(--color-secondary-hover) var(--beam-1-start),
      transparent var(--beam-1-start),
      transparent var(--beam-2-end),
      var(--color-secondary-hover) var(--beam-2-end),
      var(--color-secondary-hover) var(--beam-2-start),
      transparent var(--beam-2-start)
    );
  }
  &:hover::after {
    background: var(--color-secondary-hover);
  }
}
/* INFO the invert buttons determine whether the color of the background image is inverted in normal/hover and dark/light.
    The syntax is btn-invert-light_dark.
    Always-on & always-off speak for themselves.
      1 word on either side of _ denotes the case for normal & hover.
      2 words on either side denotes the invert status for normal, then hover.
      eg. onon_offon means inverted for both normal and hover in light mode, but only on hover in dark mode */
.btn-invert-never {
  & img {
    filter: var(--filter-invert-always_off);
  }
  & span {
    &::before {
      filter: var(--filter-invert-always_off);
    }
  }
}
.btn-invert-always {
  & img {
    filter: var(--filter-invert-always_on);
  }
  & span {
    &::before {
      filter: var(--filter-invert-always_on);
    }
  }
}
.btn-invert-off_on {
  & img {
    filter: var(--filter-invert-off_on);
  }
  & span {
    &::before {
      filter: var(--filter-invert-off_on);
    }
  }
  &:hover span,
  &:hover img {
    &::before {
      filter: var(--filter-invert-off_on);
    }
  }
}
.btn-invert-on_off {
  & img {
    filter: var(--filter-invert-on_off);
  }
  & span {
    &::before {
      filter: var(--filter-invert-on_off);
    }
  }
  &:hover span,
  &:hover img {
    &::before {
      filter: var(--filter-invert-on_off);
    }
  }
}
.btn-invert-onoff_offoff {
  & img {
    filter: var(--filter-invert-on_off);
  }
  & span {
    &::before {
      filter: var(--filter-invert-on_off);
    }
  }
  &:hover span,
  &:hover img {
    color: var(--color-light-1);
    &::before {
      filter: var(--filter-invert-always_off);
    }
  }
}
.btn-invert-onoff_onoff {
  & img {
    filter: var(--filter-invert-always_on);
  }
  & span {
    &::before {
      filter: var(--filter-invert-always_on);
    }
  }
  &:hover span,
  &:hover img {
    color: var(--color-light-1);
    &::before {
      filter: var(--filter-invert-always_off);
    }
  }
}
.btn-invert-onon_offoff {
  & img {
    filter: var(--filter-invert-on_off);
  }
  & span {
    &::before {
      filter: var(--filter-invert-on_off);
    }
  }
  &:hover span,
  &:hover img {
    color: var(--color-light-1);
    &::before {
      filter: var(--filter-invert-on_off);
    }
  }
}
.btn-invert-offon_offoff {
  & img {
    filter: var(--filter-invert-always_off);
  }
  & span {
    &::before {
      filter: var(--filter-invert-always_off);
    }
  }
  &:hover span,
  &:hover img {
    color: var(--color-light-1);
    &::before {
      filter: var(--filter-invert-on_off);
    }
  }
}
.s16 {
  & img {
    height: 1.6rem;
    aspect-ratio: 1 / 1;
  }
}
.s24 {
  & img {
    height: 2.4rem;
    aspect-ratio: 1 / 1;
  }
}

/* -- dark light toggle --- */
.darklight,
.allow-comments {
  width: 7rem;
  height: 3.4rem;
  border-radius: var(--btn-radius);
  border: 0.2rem solid var(--color-secondary-border);
  position: relative;
  cursor: url('/assets/cursors/pointer.svg'), pointer;
  z-index: 0;
  clip-path: border-box;

  & input {
    opacity: 0;
    width: 0;
    height: 0;
  }
}
.darklight-border,
.allow-comments-border {
  width: 7rem;
  height: 3.4rem;
  border-radius: var(--btn-radius);
  border: 0.2rem solid var(--color-secondary-border);
  position: absolute;
  top: 0;
  left: 0;
  z-index: var(--z-index-darklight-border);
}
.darklight-fx,
.allow-comments-fx {
  &::before {
    content: "";
    position: absolute;
    top: 0.2rem;
    left: 0.2rem;
    width: 2.6rem;
    height: 2.6rem;
    border-radius: var(--btn-radius);
    border: 0.2rem solid
      lab(from var(--color-hl-green-lab) calc(l - 20) calc(a - 0) calc(b - 0));
    background: var(--color-hl-primary);
    transition: left ease-in-out var(--transition-dur-hover-darklight);
  }
}
.darklight-fx {
  &::after {
    content: url("/assets/icons/darklight.svg");
    filter: var(--filter-invert-on_off);
    position: absolute;
    top: calc(50% - 5.5rem);
    left: calc(50% - 7.3rem);
    height: 11rem;
    aspect-ratio: 1 / 1;
    transition: all ease-in-out var(--transition-dur-hover-darklight);
    z-index: var(--z-index-darklight-fx);
  }
}
input:checked + .darklight-fx:before {
  left: 3.8rem;
}
input:checked + .darklight-fx:after {
  transform: rotate(90deg);
  left: calc(50% - 3.8rem);
  animation: light-to-dark ease-in-out var(--transition-dur-hover-darklight) 1
    forwards;
}
input:not(:checked) + .darklight-fx:after {
  transform: rotate(0deg);
  left: calc(50% - 7.3rem);
  animation: dark-to-light ease-in-out var(--transition-dur-hover-darklight) 1
    forwards;
}
/* -- allow comments toggle --- */
.allow-comments {
  width: 3.5rem;
  height: 1.8rem;
}
.allow-comments:has(input:checked) + label {
  color: var(--color-hl-green);
}
.allow-comments-fx {
  &::before {
    top: 0.1rem;
    left: 0.1rem;
    width: 1.2rem;
    height: 1.2rem;
    filter: grayscale(1);
    border: 0.1rem solid
      lab(from var(--color-hl-green-lab) calc(l - 20) calc(a - 0) calc(b - 0));
    transition: all var(--transition-dur-hover) var(--transition-type-hover);
  }
}
input:checked + .allow-comments-fx {
  &::before {
    filter: grayscale(0);
    left: 1.8rem;
  }
}

.share-logo {
    display: flex;
    min-width: 4rem;
    min-height: 4rem;
    max-width: 4rem;
    max-height: 4rem;
    border-radius: 50%;



    &.facebook {
        background: url("/assets/images/Facebook_logo.svg") lightgray 50% / cover no-repeat ;
    }
    &.twitter {
        background: url("/assets/images/twitter_x_logo.svg") lightgray 50% / cover no-repeat ;
    }
    &.linkedin {
        background: url("/assets/images/LinkedIn_logo.svg") lightgray 50% / cover no-repeat ;
    }
    &.reddit {
        background: url("/assets/images/reddit_logo.svg") lightgray 50% / cover no-repeat ;
    }
    &.whatsapp {
        border-radius: 0;
        background: url("/assets/images/WhatsApp_logo.svg") no-repeat ;
    }
    &.telegram {
        background: url("/assets/images/Telegram_logo.svg") lightgray 50% / cover no-repeat ;
    }
}

/*--- properties ---*/
@property --beam-1-start {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}
@property --beam-1-end {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}
@property --beam-2-start {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}
@property --beam-2-end {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}
@property --beam-linear-h {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --beam-linear-w {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}
/*--- keyframes ---*/
@keyframes fade-out-in {
  0%,
  100% {
    opacity: 1;
  }
  30%,
  70% {
    opacity: 0;
  }
}
@keyframes light-to-dark {
  0%,
  100% {
    opacity: 1;
  }
  40%,
  60% {
    opacity: 0;
  }
}
@keyframes dark-to-light {
  0%,
  100% {
    opacity: 1;
  }
  40%,
  60% {
    opacity: 0;
  }
}
@keyframes orbit-btn {
  0% {
    /*--grad-from: 90deg;*/
    --beam-1-end: 90deg;
    --beam-1-start: 90deg;
    --beam-2-end: 270deg;
    --beam-2-start: 270deg;
  }
  65%,
  100% {
    --beam-1-end: 0deg;
    --beam-1-start: 180deg;
    --beam-2-end: 180deg;
    --beam-2-start: 360deg;
  }
  90%,
  100% {
    /*filter: blur(2px);*/
  }
}
@keyframes linear-fill-button {
  5% {
    --beam-linear-h: 2%;
    --beam-linear-w: 2%;
  }
  20% {
    --beam-linear-h: 2%;
    --beam-linear-w: 2%;
  }
  80%,
  100% {
    --beam-linear-h: 100%;
    --beam-linear-w: 100%;
  }
}
@keyframes btn-fill {
  90% {
    background: var(--color-bg-3);
  }
  100% {
    background: var(--color-secondary-hover);
  }
}

